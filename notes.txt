D
Create
Read
Update
Delete

databazove rozhrani pro Customer = CustomerService
db.service.api
potom budu delat API - interface  Product/MerchantService

stejne ProductService

void update(int id, String name, double price, int available)
Vytvorim novou tridu Update product request

implementace DB rozhrani mapper package pod db

CustomerRepository bude nejnizssi vrstva, ktera bude komunikovat s jDBC template
CustomerRepository obsahuje jenom komunikaci s DB, nestara se o logiku
CustomerServiceImpl bude slouzit k vlastni business logice, treba zjistovat, jestli ma zakaznik penize apod.

ProductRepository a ServiceImpl stejna situace.

Neprochazi testy na na, kdyz spustim cely balicek naraz! test creatMerchant() vytvoril zaznamy v db h2, ktere vadi dalsim testum
Solution: @DirtiesContext(classMode = DirtiesContext.ClassMode.BEFORE_CLASS) predtim nez se spusti class, vycisti se kontext

V kontrollerech vystavujeme REST Sluzby, ktere muze frontend zavolat